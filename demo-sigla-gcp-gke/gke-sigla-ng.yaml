---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "sigla-ng"
  namespace: "default"
  labels:
    app: "sigla-ng"
data:
  SIGLA_WILDFLY_URL: http://$sigla_thorntail_ip
  SPRING_DATASOURCE_URL: jdbc:postgresql://$db_private_ip:5432/sigladb?schema=public
  SPRING_PROFILES_ACTIVE: demopostgresql
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "sigla-ng"
  namespace: "default"
  labels:
    app: "sigla-ng"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "sigla-ng"
  template:
    metadata:
      labels:
        app: "sigla-ng"
    spec:
      containers:
      - name: "sigla-ng"
        image: "europe-west4-docker.pkg.dev/$project_id/ar-team-digi-sigla-poc-001/sigla-ng:latest"
        env:
        - name: "SIGLA_WILDFLY_URL"
          valueFrom:
            configMapKeyRef:
              key: "SIGLA_WILDFLY_URL"
              name: "sigla-ng"
        - name: "SPRING_DATASOURCE_URL"
          valueFrom:
            configMapKeyRef:
              key: "SPRING_DATASOURCE_URL"
              name: "sigla-ng"
        - name: "SPRING_PROFILES_ACTIVE"
          valueFrom:
            configMapKeyRef:
              key: "SPRING_PROFILES_ACTIVE"
              name: "sigla-ng"
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "sigla-ng"
  namespace: "default"
  labels:
    app: "sigla-ng"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "sigla-ng"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  name: sigla-ng
  labels:
    app: sigla-ng
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32750
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: sigla-ng
  sessionAffinity: None
  type: LoadBalancer
